apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana
  namespace: argocd
spec:
  project: default
  sources:
    - chart: grafana
      repoURL: https://grafana.github.io/helm-charts
      targetRevision: 8.9.0
      helm:
        valuesObject:
          replicas: 2
          image:
            tag: 11.4.2
          grafana.ini:
            server:
              root_url: https://grafana.chik4ge.me
              enable_gzip: true
            auth:
              disable_login_form: true
            auth.github:
              enabled: true
              allow_sign_up: true
              client_id: Ov23liEAZPnCVaDnDWdl
              client_secret: $__env{GF_GITHUB_CLIENT_SECRET}
              scopes: user:email,read:org
              auth_url: https://github.com/login/oauth/authorize
              token_url: https://github.com/login/oauth/access_token
              api_url: https://api.github.com/user
              allow_assign_grafana_admin: true
              role_attribute_path: "contains(groups[*], '@chik4ge-homelab/admin') && 'GrafanaAdmin' || 'Viewer'"
            database:
              type: mysql
              host: grafana-pxc-db-haproxy.grafana.svc.cluster.local
              user: grafana
              password: $__env{MYSQL_PASSWORD}
              migration_locking: false
          envValueFrom:
            GF_GITHUB_CLIENT_SECRET:
              secretKeyRef:
                name: grafana-secret
                key: github-sso-client-secret
            MYSQL_PASSWORD:
              secretKeyRef:
                name: mysql-secret
                key: password
          datasources:
            datasources.yaml:
              apiVersion: 1
              datasources:
                - name: Mimir
                  type: prometheus
                  access: proxy
                  url: http://mimir-nginx.mimir.svc.cluster.local/prometheus
                  isDefault: true
                  jsonData:
                    timeout: 1800
                - name: Loki
                  type: loki
                  access: proxy
                  url: http://loki.loki.svc.cluster.local:3100
                  isDefault: false
                  jsonData:
                    maxLines: 1000

          extraObjects:
            - apiVersion: external-secrets.io/v1
              kind: ExternalSecret
              metadata:
                name: grafana-secret
                labels:
                  app.kubernetes.io/part-of: argocd
              spec:
                refreshInterval: 1h
                secretStoreRef:
                  name: bitwarden-secretsmanager
                  kind: ClusterSecretStore
                data:
                  - secretKey: github-sso-client-secret
                    remoteRef:
                      key: "f7b7d08e-0571-4685-a889-b275010f851f"

            - apiVersion: external-secrets.io/v1
              kind: ExternalSecret
              metadata:
                name: mysql-secret
                labels:
                  app.kubernetes.io/part-of: argocd
              spec:
                refreshInterval: 1h
                secretStoreRef:
                  name: bitwarden-secretsmanager
                  kind: ClusterSecretStore
                data:
                  - secretKey: password
                    remoteRef:
                      key: "5f685cc0-9229-4a78-8a4e-b2750104d6fd"

    - chart: pxc-db
      repoURL: https://percona.github.io/percona-helm-charts/
      targetRevision: 1.17.0
      helm:
        parameters:
          - name: pxc.certManager
            value: "true"
        valuesObject:
          users:
            - name: grafana
              dbs:
                - grafana
              passwordSecretRef:
                name: mysql-secret
                key: rootPassword
              grants:
                - ALL
                - PRIVILEGES
          haproxy:
            resources:
              requests:
                memory: 128Mi
                cpu: 100m
          pxc:
            resources:
              requests:
                cpu: 100m
          logcollector:
            resources:
              requests:
                cpu: 0
                memory: 0

  destination:
    namespace: grafana
    server: https://kubernetes.default.svc
  syncPolicy:
    automated:
      prune: true
    syncOptions:
      - CreateNamespace=true
