apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
data:
  context: |
    argocdUrl: https://argocd.chik4ge.me
  service.webhook.discord: |
    url: $discord-webhook-url
    headers:
    - name: Content-Type
      value: application/json
  subscriptions: |
    - recipients:
        - discord
      triggers:
        - on-created
        - on-deleted
        - on-health-degraded
        - on-sync-failed
        - on-sync-status-unknown
  template.app-created: |
    message: |
      Application {{.app.metadata.name}} has been created.
    webhook:
      discord:
        method: POST
        body: |
          {
            "embeds": [{
              "title": ":sparkles: Application Created :sparkles:",
              "description": "Application [**{{.app.metadata.name}}**]({{.context.argocdUrl}}/applications/{{.app.metadata.name}}) has been created.",
              "color": 3066993,
              "timestamp": "{{ (call .time.Now).Format .time.RFC3339 }}"
            }]
          }
  template.app-deleted: |
    message: |
      Application {{.app.metadata.name}} has been deleted.
    webhook:
      discord:
        method: POST
        body: |
          {
            "embeds": [{
              "title": ":wastebasket: Application Deleted :wastebasket:",
              "description": "Application **{{.app.metadata.name}}** has been deleted.",
              "color": 15158332,
              "timestamp": "{{ (call .time.Now).Format .time.RFC3339 }}"
            }]
          }
  template.app-health-degraded: |
    message: |
      :exclamation: Application {{.app.metadata.name}} has degraded.
      Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
    webhook:
      discord:
        method: POST
        body: |
          {
            "embeds": [{
              "title": "{{ .app.metadata.name }} - Health Degraded",
              "url": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
              "description": ":exclamation: Application **{{.app.metadata.name}}** has degraded.",
              "color": 15949872,
              "fields": [
                {
                  "name": "Health Status",
                  "value": "{{.app.status.health.status}}",
                  "inline": true
                },
                {
                  "name": {{- if .app.spec.source }} "Repository" {{- else if .app.spec.sources }} "Repositories" {{- end }},
                  "value": {{- if .app.spec.source }} ":link: {{ .app.spec.source.repoURL }}" {{- else if .app.spec.sources }} "{{- range $index, $source := .app.spec.sources }}{{ if $index }}\n{{ end }}:link: {{ $source.repoURL }}{{- end }}" {{- end }},
                  "inline": true
                }
                {{range $index, $c := .app.status.conditions}}
                ,
                {
                  "name": "{{$c.type}}",
                  "value": "{{$c.message}}",
                  "inline": true
                }
                {{end}}
              ],
              "timestamp": "{{ (call .time.Now).Format .time.RFC3339 }}"
            }]
          }
  template.app-sync-failed: |
    message: |
      :x:  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}
      Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
    webhook:
      discord:
        method: POST
        body: |
          {
            "embeds": [{
              "title": "{{ .app.metadata.name }} - Sync Failed",
              "url": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true",
              "description": ":x: The sync operation of application **{{.app.metadata.name}}** has failed at {{.app.status.operationState.finishedAt}}.\n**Error:** {{.app.status.operationState.message}}",
              "color": 15297910,
              "fields": [
                {
                  "name": "Sync Status",
                  "value": "{{.app.status.sync.status}}",
                  "inline": true
                },
                {
                  "name": {{- if .app.spec.source }} "Repository" {{- else if .app.spec.sources }} "Repositories" {{- end }},
                  "value": {{- if .app.spec.source }} ":link: {{ .app.spec.source.repoURL }}" {{- else if .app.spec.sources }} "{{- range $index, $source := .app.spec.sources }}{{ if $index }}\n{{ end }}:link: {{ $source.repoURL }}{{- end }}" {{- end }},
                  "inline": true
                }
                {{range $index, $c := .app.status.conditions}}
                ,
                {
                  "name": "{{$c.type}}",
                  "value": "{{$c.message}}",
                  "inline": true
                }
                {{end}}
              ],
              "timestamp": "{{ (call .time.Now).Format .time.RFC3339 }}"
            }]
          }
  template.app-sync-status-unknown: |
    message: |
      :question: Application {{.app.metadata.name}} sync is 'Unknown'.
      Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
      {{if ne .serviceType "webhook"}}
      {{range $c := .app.status.conditions}}
          * {{$c.message}}
      {{end}}
      {{end}}
    webhook:
      discord:
        method: POST
        body: |
          {
            "embeds": [{
              "title": "{{ .app.metadata.name }} - Sync Status Unknown",
              "url": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
              "description": ":question: Application **{{.app.metadata.name}}** sync status is 'Unknown'.",
              "color": 15297910,
              "fields": [
                {
                  "name": "Sync Status",
                  "value": "{{.app.status.sync.status}}",
                  "inline": true
                },
                {
                  "name": {{- if .app.spec.source }} "Repository" {{- else if .app.spec.sources }} "Repositories" {{- end }},
                  "value": {{- if .app.spec.source }} ":link: {{ .app.spec.source.repoURL }}" {{- else if .app.spec.sources }} "{{- range $index, $source := .app.spec.sources }}{{ if $index }}\n{{ end }}:link: {{ $source.repoURL }}{{- end }}" {{- end }},
                  "inline": true
                }
                {{range $index, $c := .app.status.conditions}}
                ,
                {
                  "name": "{{$c.type}}",
                  "value": "{{$c.message}}",
                  "inline": true
                }
                {{end}}
              ],
              "timestamp": "{{ (call .time.Now).Format .time.RFC3339 }}"
            }]
          }
  trigger.on-created: |
    - description: Application is created.
      oncePer: app.metadata.name
      send:
      - app-created
      when: "true"
  trigger.on-deleted: |
    - description: Application is deleted.
      oncePer: app.metadata.name
      send:
      - app-deleted
      when: app.metadata.deletionTimestamp != nil
  trigger.on-health-degraded: |
    - description: Application has degraded
      oncePer: app.status.operationState?.syncResult?.revision
      send:
      - app-health-degraded
      when: app.status.health.status == 'Degraded'
  trigger.on-sync-failed: |
    - description: Application syncing has failed
      oncePer: app.status.operationState?.syncResult?.revision
      send:
      - app-sync-failed
      when: app.status.operationState != nil and app.status.operationState.phase in ['Error',
        'Failed']
  trigger.on-sync-status-unknown: |
    - description: Application status is 'Unknown'
      oncePer: app.status.operationState?.syncResult?.revision
      send:
      - app-sync-status-unknown
      when: app.status.sync.status == 'Unknown'
