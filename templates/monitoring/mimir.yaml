apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mimir
  namespace: argocd
spec:
  project: default
  sources:
    - repoURL: https://github.com/chik4ge-homelab/homelab-applications
      targetRevision: main
      path: apps/monitoring/mimir/secrets
    - repoURL: https://grafana.github.io/helm-charts
      chart: mimir-distributed
      targetRevision: 6.0.0
      helm:
        valuesObject:
          compactor:
            persistentVolume:
              size: 20Gi
              storageClass: mayastor-3-replica
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 1Gi

          distributor:
            replicas: 2
            resources:
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 4Gi

          nginx:
            enabled: false

          gateway:
            enabledNonEnterprise: true
            replicas: 2
            ingress:
              enabled: true
              ingressClassName: nginx
              hosts:
                - host: mimir.chik4ge.me
                  paths:
                    - path: /
                      pathType: Prefix
              tls:
                - hosts:
                    - mimir.chik4ge.me

          ingester:
            replicas: 2
            persistentVolume:
              size: 25Gi
              storageClass: mayastor-3-replica
            affinity:
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                        - key: target
                          operator: In
                          values:
                            - ingester
                    topologyKey: "kubernetes.io/hostname"
                  - labelSelector:
                      matchExpressions:
                        - key: app.kubernetes.io/component
                          operator: In
                          values:
                            - ingester
                    topologyKey: "kubernetes.io/hostname"
            resources:
              requests:
                cpu: 150m
                memory: 1Gi
              limits:
                memory: 5Gi
                    
          store_gateway:
            persistentVolume:
              storageClass: mayastor-3-replica
            affinity:
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                        - key: target
                          operator: In
                          values:
                            - store-gateway
                    topologyKey: "kubernetes.io/hostname"
                  - labelSelector:
                      matchExpressions:
                        - key: app.kubernetes.io/component
                          operator: In
                          values:
                            - store-gateway
                    topologyKey: "kubernetes.io/hostname"
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 512Mi

          chunks-cache:
            enabled: true
            replicas: 1
            allocatedMemory: 4096
            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                memory: 4Gi

          alertmanager:
            persistentVolume:
              storageClass: mayastor-3-replica

          metaMonitoring:
            serviceMonitor:
              enabled: true

          index-cache:
            enabled: true
            replicas: 3
            resources:
              requests:
                cpu: 10m
                memory: 50Mi
              limits:
                memory: 200Mi

          metadata-cache:
            enabled: true
            replicas: 3
            resources:
              requests:
                cpu: 10m
                memory: 10Mi
              limits:
                memory: 50Mi

          results-cache:
            enabled: true
            replicas: 3
            resources:
              requests:
                cpu: 100m
          
          ruler:
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                memory: 512Mi

          minio:
            enabled: false

          global:
            extraEnvFrom:
              - secretRef:
                  name: mimir-bucket-secret

          runtimeConfig:
            ingester_limits:
              max_ingestion_rate: 999999999
            distributor_limits:
              max_ingestion_rate: 999999999

          mimir:
            structuredConfig:
              common:
                storage:
                  backend: s3
                  s3:
                    endpoint: minio.minio.svc.cluster.local
                    access_key_id: "${AWS_ACCESS_KEY_ID}"
                    secret_access_key: "${AWS_SECRET_ACCESS_KEY}"
                    http:
                      insecure_skip_verify: true
              limits:
                ingestion_rate: 999999999
                out_of_order_time_window: 24h
                compactor_blocks_retention_period: 168h
                max_global_series_per_user: 0
              distributor:
                remote_timeout: 30m
              server:
                http_server_read_timeout: 30m
                http_server_write_timeout: 30m
              blocks_storage:
                s3:
                  bucket_name: mimir-blocks
                bucket_store:
                  chunks_cache:
                    memcached:
                      timeout: 15s
              alertmanager_storage:
                s3:
                  bucket_name: mimir-alertmanager
              ruler_storage:
                s3:
                  bucket_name: mimir-ruler

  destination:
    namespace: mimir
    server: {{ .Values.spec.destination.server }}
  syncPolicy:
    automated:
      prune: true
    syncOptions:
      - CreateNamespace=true
