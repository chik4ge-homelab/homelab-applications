apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  namespace: argocd
spec:
  project: default
  sources:
    - repoURL: https://github.com/chik4ge-homelab/homelab-applications
      targetRevision: main
      path: apps/devops/argocd/secrets
    - repoURL: https://argoproj.github.io/argo-helm
      targetRevision: 8.0.10
      chart: argo-cd
      helm:
        valuesObject:
          global:
            addPrometheusAnnotations: true
          configs:
            cm:
              url: https://argocd.chik4ge.me
              dex.config: |
                connectors:
                  - type: github
                    id: github
                    name: GitHub
                    config:
                      clientID: Ov23liO6LEyYow0nlys8
                      clientSecret: $github-secret:token
                      orgs:
                        - name: chik4ge-homelab
              resource.exclusions: |
                - apiGroups:
                    - cilium.io
                  kinds:
                    - CiliumIdentity
                  clusters:
                    - "*"
            rbac:
              policy.csv: |
                g, chik4ge-homelab:admin, role:admin
          redis-ha:
            enabled: true
            haproxy:
              metrics:
                enabled: true

          controller:
            replicas: 1
            metrics:
              enabled: true

          server:
            replicas: 2
            metrics:
              enabled: true

          repoServer:
            replicas: 2
            metrics:
              enabled: true

          applicationSet:
            replicas: 2
            metrics:
              enabled: true

          dex:
            metrics:
              enabled: true

          redis:
            metrics:
              enabled: true
              
          # ArgoCD Notifications Controller の設定
          notifications:
            enabled: true
            metrics:
              enabled: true
            secret:
              create: false
              name: argocd-notifications-secret
            templates:
              app-sync-running: |
                message: |
                  The sync operation of application {{ "{{" }}.app.metadata.name{{ "}}" }} has started at {{ "{{" }}.app.status.operationState.startedAt{{ "}}" }}.
                  Sync operation details are available at: {{ "{{" }}.context.argocdUrl{{ "}}" }}/applications/{{ "{{" }}.app.metadata.name{{ "}}" }}?operation=true .
                discord:
                  attachments: |
                    [{
                      "title": "{{ "{{" }} .app.metadata.name{{ "}}" }}",
                      "title_link":"{{ "{{" }}.context.argocdUrl{{ "}}" }}/applications/{{ "{{" }}.app.metadata.name{{ "}}" }}",
                      "color": "#0DADEA",
                      "fields": [
                      {
                        "title": "Sync Status",
                        "value": "{{ "{{" }}.app.status.sync.status{{ "}}" }}",
                        "short": true
                      },
                      {
                        "title": {{ "{{" }}- if .app.spec.source {{ "}}" }} "Repository" {{ "{{" }}- else if .app.spec.sources {{ "}}" }} "Repositories" {{ "{{" }}- end {{ "}}" }},
                        "value": {{ "{{" }}- if .app.spec.source {{ "}}" }} ":arrow_heading_up: {{ "{{" }} .app.spec.source.repoURL {{ "}}" }}" {{ "{{" }}- else if .app.spec.sources {{ "}}" }} "{{ "{{" }}- range $index, $source := .app.spec.sources {{ "}}" }}{{ "{{" }} if $index {{ "}}" }}\n{{ "{{" }} end {{ "}}" }}:arrow_heading_up: {{ "{{" }} $source.repoURL {{ "}}" }}{{ "{{" }}- end {{ "}}" }}" {{ "{{" }}- end {{ "}}" }},
                        "short": true
                      }
                      {{ "{{" }}range $index, $c := .app.status.conditions{{ "}}" }}
                      ,
                      {
                        "title": "{{ "{{" }}$c.type{{ "}}" }}",
                        "value": "{{ "{{" }}$c.message{{ "}}" }}",
                        "short": true
                      }
                      {{ "{{" }}end{{ "}}" }}
                      ]
                    }]
            triggers:
              on-sync-running: |
                - description: Application is being synced
                  oncePer: app.status.operationState?.syncResult?.revision
                  send: [app-sync-running]
                  when: app.status.operationState != nil and app.status.operationState.phase in ['Running']
            notifiers:
              discord:
                enabled: true
                token: $discord-webhook-url
  destination:
    namespace: argocd
    server: {{ .Values.spec.destination.server }}
  syncPolicy:
    automated:
      prune: true
    syncOptions:
      - CreateNamespace=true
